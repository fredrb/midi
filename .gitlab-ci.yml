image: golang:latest

variables:
  REPO_NAME: gitlab.com/gomidi/midi/v2

before_script:
  - go version
  - echo $CI_BUILD_REF
  - echo $CI_PROJECT_DIR
  - echo $GOPATH
  - cd v2

format:
  stage: test
  script:
#    - apt-get install libasound-dev
    - apt-get update
    - apt-cache search 'asound'
    - apt-cache search 'portmidi'
    - apt-get install -y libasound2-dev
    - apt-get install -y libportmidi-dev
#    - go fmt $(go list ./... | grep -v /drivers/)
    - go fmt $(go list ./... | grep -v /vendor/)
#    - go vet $(go list ./... | grep -v /drivers/)
    - go vet $(go list ./... | grep -v /vendor/)
#    - go test -race $(go list ./... | grep -v /drivers/)
    - go test -race $(go list ./... | grep -v /vendor/)

stages:
  - test
  - build
  
test-project:
  stage: test
  script:
#    - apt-get install libasound2-dev
#    - apt-get install libportmidi-dev
    - go test $(go list ./... | grep -v /drivers/)

WindowsJob:
  stage: test
  tags:
    - windows
  script:
#    - go.exe test ./...
    - go.exe test $(go list ./... | findstr /v "drivers")
    
#OSXJob:
#  stage: test
#  tags:
#    - osx
#  script:
#    - uname -a
#    - go test ./...


#build-project:
#  stage: build
#  script:
#    - OUTPUT="output"
#    - bash build-all.sh $OUTPUT $CI_PROJECT_DIR
#    
#  artifacts:
#    paths:
#      - artifacts/

#WindowsJob:
#  stage: test
#  tags:
#    - windows
#  script:
#    - go.exe test ./...

#OSXJob:
#  stage: test
#  tags:
#    - osx
#  script:
#    - uname -a
#    - go test ./...
